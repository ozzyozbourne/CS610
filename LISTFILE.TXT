    1 #include <stdlib.h>
    2 
    3 #define header_lines 4;
    4 #define image_columns 120
    5 #define image_rows 134
    6 #define  MaxGrayComponentValue 255;
    7 #define carriage_return '\n'
    8 
    9 int image_in[image_rows+ 1][image_columns+ 1];
   10 int hist[MaxGrayComponentValue + 1];
   11 spinlock L[MaxGrayComponentValue + 1];
   12 
   13 int i, j;
   14 
   15 void read_image_header(void){
   16     char buffer[header_lines+1][80];
   17     char c;
   18     int m;
   19     for (m = 1; m <= header_lines; ++m){
   20         do{
   21             cin >> c;  
   22         } while (c != carriage_return);
   23     }
   24  }
   25 
   26 void read_image_values(void){    
   27     for(i = 1; i <= image_rows; i++){
   28         for( j = 1; j <= image_columns; j++) { cin >> image_in[i][j]; }
   29     }
   30 }
   31 
   32 main(void){
   33 
   34     read_image_header();
   35     read_image_values();
   36 
   37     for (i = 0; i <= MaxGrayComponentValue; i++){ hist[i] = 0; }
   38 
   39     forall i = 1 to image_rows do { 
   40         int j, intensity;
   41         for (j = 1; j <= image_columns; j++) {
   42             intensity = image_in[i][j];
   43             Lock(L[intensity]);
   44             hist[intensity] = hist[intensity] + 1;  
   45             Unlock(L[intensity]);
   46         }
   47     }
   48 
   49 
   50     /* Printing the histogram */
   51     for (i = 0; i <= MaxGrayComponentValue; i++){ cout << "hist ["<<i<< "] = " << hist[i] << endl; }
   52 
   53 }
